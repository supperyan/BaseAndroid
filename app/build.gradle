apply plugin: 'com.android.application'

def config = rootProject.ext.configuration
def libs = rootProject.ext.library

android {
    compileSdkVersion config.compileSdk
    buildToolsVersion config.buildToolsVersion

    useLibrary 'org.apache.http.legacy'

    defaultConfig {
        applicationId config.applicationId
        minSdkVersion config.minSdk
        targetSdkVersion config.targetSdk
        versionCode config.versionCode
        versionName config.versionName
        multiDexEnabled true
    }
    sourceSets {

        main {
            //jniLibs.srcDirs = ['jniLibs']
            res.srcDir "src/main/java/com/theaty/migao/cartModule/res"
        }
    }

    signingConfigs {
        debug {
            storeFile file('../app/release.jks')
            storePassword 'yanchao'
            keyAlias 'freeGang'
            keyPassword 'yanchao'
        }
        release {
            storeFile file('../app/release.jks')
            storePassword 'yanchao'
            keyAlias 'freeGang'
            keyPassword 'yanchao'
        }
    }
    dexOptions {

        javaMaxHeapSize "4g"
    }
    buildTypes {
        release {
            ndk {
                abiFilters "armeabi", "armeabi-v7a", "x86"
            }

            // minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }

        debug {
            ndk {
                abiFilters "armeabi", "armeabi-v7a", "x86"
            }
            signingConfig signingConfigs.release
        }
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "com.jakewharton:butterknife:${libs.butterknife}"
    annotationProcessor "com.jakewharton:butterknife-compiler:${libs.butterknife}"
    //noinspection GradleCompatible
    implementation "com.android.support:support-v4:${libs.supportLibrary}"
    implementation "com.android.support:appcompat-v7:${libs.supportLibrary}"
    implementation "com.android.support:recyclerview-v7:${libs.supportLibrary}"
    implementation "com.android.support:design:${libs.supportLibrary}"
    //  图片加载
    implementation "com.github.bumptech.glide:glide:${libs.glide}"
    //  gson解析
    implementation "com.google.code.gson:gson:${libs.gson}"
    //  解决65535
    implementation 'com.android.support:multidex:1.0.1'
    //  网络加载框架
    implementation 'com.lzy.net:okgo:3.0.4'
    implementation 'com.lzy.net:okrx2:2.0.2'
    implementation 'com.lzy.net:okserver:2.0.5'
    //  数据传递
    implementation 'org.greenrobot:eventbus:3.0.0'
    //  优雅简单的TabLayout
    implementation 'com.flyco.tablayout:FlycoTabLayout_Lib:2.1.2@aar'
    //  BaseAdapter
    implementation 'com.github.CymChad:BaseRecyclerViewAdapterHelper:2.9.47'
    //  popup
    implementation 'com.lxj:xpopup:1.8.10'
    //  工具类
    implementation 'com.blankj:utilcode:1.25.9'
    //  简单，强大的广告活动弹窗控件
    implementation 'cn.yipianfengye.android:ad-library:1.0'
    //  DiscreteScrollView
    implementation 'com.yarolegovich:discrete-scrollview:1.4.9'
    //  微信
    implementation 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:+'
    //  适配
    implementation 'me.jessyan:autosize:1.1.2'
    //  自动更新
    implementation 'com.qianwen:update-app:3.5.2'
    //  百度地图
    implementation files('libs/BaiduLBS_Android.jar')
    //  状态栏
    implementation 'com.gyf.immersionbar:immersionbar:3.0.0'
    //  banner
    implementation 'com.youth.banner:banner:1.4.10'  //最新版本
}
